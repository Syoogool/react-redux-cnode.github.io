"use strict";var precacheConfig=[["/react-redux-cnode.github.io/index.html","1091caa502aa9173ab5ed8b895a135b6"],["/react-redux-cnode.github.io/static/css/main.89483967.css","e9b653b414ccea2a6a64fc79e315a83f"],["/react-redux-cnode.github.io/static/js/0.078ef914.chunk.js","30c76c4b3fa69ceaf1221b10f7a6e7b9"],["/react-redux-cnode.github.io/static/js/1.99c3ef9a.chunk.js","a654ead9fb6a7ba6400ee256b3d8327c"],["/react-redux-cnode.github.io/static/js/2.3942072c.chunk.js","4b2d13a76f4b84af2203cc43a030a8a5"],["/react-redux-cnode.github.io/static/js/3.cc06da36.chunk.js","22eca3fb0cba743c39f0432cbe68e640"],["/react-redux-cnode.github.io/static/js/4.35bae405.chunk.js","543c455de9975b1e6086a1c7a90fef04"],["/react-redux-cnode.github.io/static/js/5.8ad3c3cd.chunk.js","7232e910e912e74aeccbc7d27fc07767"],["/react-redux-cnode.github.io/static/js/main.b59e8431.js","1351733e1bc5381384a2adc0472ea673"],["/react-redux-cnode.github.io/static/media/flags.9c74e172.png","9c74e172f87984c48ddf5c8108cabe67"],["/react-redux-cnode.github.io/static/media/icons.674f50d2.eot","674f50d287a8c48dc19ba404d20fe713"],["/react-redux-cnode.github.io/static/media/icons.912ec66d.svg","912ec66d7572ff821749319396470bde"],["/react-redux-cnode.github.io/static/media/icons.af7ae505.woff2","af7ae505a9eed503f8b8e6982036873e"],["/react-redux-cnode.github.io/static/media/icons.b06871f2.ttf","b06871f281fee6b241d60582ae9369b9"],["/react-redux-cnode.github.io/static/media/icons.fee66e71.woff","fee66e712a8a08eef5805a46892932ad"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var n=new URL(e);return"/"===n.pathname.slice(-1)&&(n.pathname+=t),n.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,n,a){var r=new URL(e);return a&&r.pathname.match(a)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(n)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var n=new URL(t).pathname;return e.some(function(e){return n.match(e)})},stripIgnoredUrlParameters=function(e,t){var n=new URL(e);return n.hash="",n.search=n.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),n.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],n=e[1],a=new URL(t,self.location),r=createCacheKey(a,hashParamName,n,/\.\w{8}\./);return[a.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(n){if(!t.has(n)){var a=new Request(n,{credentials:"same-origin"});return fetch(a).then(function(t){if(!t.ok)throw new Error("Request for "+n+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(n,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(n){return Promise.all(n.map(function(n){if(!t.has(n.url))return e.delete(n)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,n=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),a="index.html";(t=urlsToCacheKeys.has(n))||(n=addDirectoryIndex(n,a),t=urlsToCacheKeys.has(n));var r="/react-redux-cnode.github.io/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(n=new URL(r,self.location).toString(),t=urlsToCacheKeys.has(n)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(n)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});