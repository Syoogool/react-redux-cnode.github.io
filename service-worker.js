"use strict";var precacheConfig=[["/react-redux-cnode.github.io/index.html","dd250f3e455d368d58abe7db2bd0b4d4"],["/react-redux-cnode.github.io/static/css/main.1de3a053.css","39c25588e236f04619a73de6c7d6c42a"],["/react-redux-cnode.github.io/static/js/0.2f8f421d.chunk.js","b8acb9908a8f4afcc2ad1b72b118f3b7"],["/react-redux-cnode.github.io/static/js/1.1efa139a.chunk.js","5223bc4c56f6923ce544ab88c9658eea"],["/react-redux-cnode.github.io/static/js/2.541a58e3.chunk.js","90df7217d78e2446d8cc03f97b43ff08"],["/react-redux-cnode.github.io/static/js/3.79b0ccc0.chunk.js","581774c86480bc5b91138b456d320779"],["/react-redux-cnode.github.io/static/js/4.6d26ade0.chunk.js","2273e4114b38be6742e56450412d527f"],["/react-redux-cnode.github.io/static/js/5.9df92285.chunk.js","946edac43acc979e748f5f69d5d62f4e"],["/react-redux-cnode.github.io/static/js/6.9e836c4b.chunk.js","02ff76b2e8cecec9e12bf4d06032abd6"],["/react-redux-cnode.github.io/static/js/7.2662e957.chunk.js","f3f9463a4f099d322d2157ce73433d89"],["/react-redux-cnode.github.io/static/js/main.cbf72087.js","51f1a4b6bf03957214e111f546a06c0d"],["/react-redux-cnode.github.io/static/media/flags.9c74e172.png","9c74e172f87984c48ddf5c8108cabe67"],["/react-redux-cnode.github.io/static/media/icons.263bfe56.eot","263bfe56755cefdc9e6c3d8070e0868d"],["/react-redux-cnode.github.io/static/media/icons.27c88389.woff2","27c88389f00e0d8bfeebebae81f240b6"],["/react-redux-cnode.github.io/static/media/icons.7bc63d50.woff","7bc63d50d4158c6bfd4b30a99c9f9460"],["/react-redux-cnode.github.io/static/media/icons.b42b4467.svg","b42b446772f84a277ee29a0615b38800"],["/react-redux-cnode.github.io/static/media/icons.d3490a32.ttf","d3490a32350db6c9c41e69cc9ce99cd0"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var c=new URL(e);return"/"===c.pathname.slice(-1)&&(c.pathname+=t),c.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,c,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(c)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var c=new URL(t).pathname;return e.some(function(e){return c.match(e)})},stripIgnoredUrlParameters=function(e,t){var c=new URL(e);return c.hash="",c.search=c.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),c.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],c=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,c,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(c){if(!t.has(c)){var n=new Request(c,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+c+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(c,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(c){return Promise.all(c.map(function(c){if(!t.has(c.url))return e.delete(c)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,c=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(t=urlsToCacheKeys.has(c))||(c=addDirectoryIndex(c,n),t=urlsToCacheKeys.has(c));var r="/react-redux-cnode.github.io/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(c=new URL(r,self.location).toString(),t=urlsToCacheKeys.has(c)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(c)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});