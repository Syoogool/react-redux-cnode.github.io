"use strict";var precacheConfig=[["/react-redux-cnode.github.io/index.html","5c5ef9bbce8e83471bcfb5281f49a349"],["/react-redux-cnode.github.io/static/css/main.7f193ec1.css","043fdf1a93b7d9febbb279a960110ba6"],["/react-redux-cnode.github.io/static/js/0.50c2dd06.chunk.js","918d8f9ad8c5c19ad81aa6444f37055a"],["/react-redux-cnode.github.io/static/js/1.22094842.chunk.js","deb50c1e85268e154b0946c120f10f24"],["/react-redux-cnode.github.io/static/js/2.6f0f6257.chunk.js","888b8be942ddbaae345c7cefa6e294b1"],["/react-redux-cnode.github.io/static/js/3.edaff8d0.chunk.js","48530aca9ec02207b5dbbbb08acee843"],["/react-redux-cnode.github.io/static/js/4.471ca898.chunk.js","c162634183c4db829839975df0127504"],["/react-redux-cnode.github.io/static/js/5.7596c991.chunk.js","afc2e10fb36ce18eac7bf160851dd7cc"],["/react-redux-cnode.github.io/static/js/main.216ff409.js","fb57f66341bb828754be93053c7e5d3d"],["/react-redux-cnode.github.io/static/media/flags.9c74e172.png","9c74e172f87984c48ddf5c8108cabe67"],["/react-redux-cnode.github.io/static/media/icons.674f50d2.eot","674f50d287a8c48dc19ba404d20fe713"],["/react-redux-cnode.github.io/static/media/icons.912ec66d.svg","912ec66d7572ff821749319396470bde"],["/react-redux-cnode.github.io/static/media/icons.af7ae505.woff2","af7ae505a9eed503f8b8e6982036873e"],["/react-redux-cnode.github.io/static/media/icons.b06871f2.ttf","b06871f281fee6b241d60582ae9369b9"],["/react-redux-cnode.github.io/static/media/icons.fee66e71.woff","fee66e712a8a08eef5805a46892932ad"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var n=new URL(e);return"/"===n.pathname.slice(-1)&&(n.pathname+=t),n.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,n,r){var a=new URL(e);return r&&a.pathname.match(r)||(a.search+=(a.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(n)),a.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var n=new URL(t).pathname;return e.some(function(e){return n.match(e)})},stripIgnoredUrlParameters=function(e,t){var n=new URL(e);return n.hash="",n.search=n.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),n.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],n=e[1],r=new URL(t,self.location),a=createCacheKey(r,hashParamName,n,/\.\w{8}\./);return[r.toString(),a]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(n){if(!t.has(n)){var r=new Request(n,{credentials:"same-origin"});return fetch(r).then(function(t){if(!t.ok)throw new Error("Request for "+n+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(n,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(n){return Promise.all(n.map(function(n){if(!t.has(n.url))return e.delete(n)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,n=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),r="index.html";(t=urlsToCacheKeys.has(n))||(n=addDirectoryIndex(n,r),t=urlsToCacheKeys.has(n));var a="/react-redux-cnode.github.io/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(n=new URL(a,self.location).toString(),t=urlsToCacheKeys.has(n)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(n)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});