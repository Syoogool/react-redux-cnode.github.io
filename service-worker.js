"use strict";var precacheConfig=[["/react-redux-cnode.github.io/index.html","dc8f4f99a3f0dc7409ebf130bee708a0"],["/react-redux-cnode.github.io/static/css/main.cc923edd.css","944ea8155bbb1d7ac16ac00f70a1513d"],["/react-redux-cnode.github.io/static/js/0.a1cc928c.chunk.js","a1547fb16573c47f300841a5abd3cc59"],["/react-redux-cnode.github.io/static/js/1.b20b28e5.chunk.js","a2343159c9186d781d7388b9218d235b"],["/react-redux-cnode.github.io/static/js/2.d41dc0d7.chunk.js","679c3189f303e4f372539180e632afab"],["/react-redux-cnode.github.io/static/js/3.88689e34.chunk.js","2c2b0bf6c9a930a43fd1f7839a12311d"],["/react-redux-cnode.github.io/static/js/4.a4b3c704.chunk.js","2936892a3187112c51f74da310b546b6"],["/react-redux-cnode.github.io/static/js/5.b7c1d3ac.chunk.js","86c9728183a9ecd96b8fdbe67ee4e3c0"],["/react-redux-cnode.github.io/static/js/6.b51c6124.chunk.js","902af525db74154495d01ffae6c7ff1c"],["/react-redux-cnode.github.io/static/js/7.b988676c.chunk.js","f6879e2332b1b9e61db85abf10eb636b"],["/react-redux-cnode.github.io/static/js/main.715906e5.js","fe3b1463d1f93c937a827064f42ed4b8"],["/react-redux-cnode.github.io/static/media/flags.9c74e172.png","9c74e172f87984c48ddf5c8108cabe67"],["/react-redux-cnode.github.io/static/media/icons.263bfe56.eot","263bfe56755cefdc9e6c3d8070e0868d"],["/react-redux-cnode.github.io/static/media/icons.27c88389.woff2","27c88389f00e0d8bfeebebae81f240b6"],["/react-redux-cnode.github.io/static/media/icons.7bc63d50.woff","7bc63d50d4158c6bfd4b30a99c9f9460"],["/react-redux-cnode.github.io/static/media/icons.b42b4467.svg","b42b446772f84a277ee29a0615b38800"],["/react-redux-cnode.github.io/static/media/icons.d3490a32.ttf","d3490a32350db6c9c41e69cc9ce99cd0"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var c=new URL(e);return"/"===c.pathname.slice(-1)&&(c.pathname+=t),c.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,c,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(c)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var c=new URL(t).pathname;return e.some(function(e){return c.match(e)})},stripIgnoredUrlParameters=function(e,t){var c=new URL(e);return c.hash="",c.search=c.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),c.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],c=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,c,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(c){if(!t.has(c)){var n=new Request(c,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+c+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(c,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(c){return Promise.all(c.map(function(c){if(!t.has(c.url))return e.delete(c)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,c=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(t=urlsToCacheKeys.has(c))||(c=addDirectoryIndex(c,n),t=urlsToCacheKeys.has(c));var r="/react-redux-cnode.github.io/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(c=new URL(r,self.location).toString(),t=urlsToCacheKeys.has(c)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(c)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});