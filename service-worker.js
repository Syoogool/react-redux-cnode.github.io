"use strict";var precacheConfig=[["/react-redux-cnode.github.io/index.html","554acdf2c60e723c708b0d7adc23fcd3"],["/react-redux-cnode.github.io/static/css/main.b70f355b.css","79156fba6a4dc3e24f2d4e651c01b546"],["/react-redux-cnode.github.io/static/js/0.6c3cd021.chunk.js","61b10b15dee71798d78949d81e8d0f01"],["/react-redux-cnode.github.io/static/js/1.a400234b.chunk.js","695f369b738c75a06c718402272f36c3"],["/react-redux-cnode.github.io/static/js/2.823ccece.chunk.js","ba12eabd7187bebd25fd7403f9e60a02"],["/react-redux-cnode.github.io/static/js/3.3e199067.chunk.js","24c6e8ffe8c2aca5fa6e2a77479c8fb1"],["/react-redux-cnode.github.io/static/js/4.1bca637c.chunk.js","b0bffb001afbf2d81cdf9f08ec2564ed"],["/react-redux-cnode.github.io/static/js/5.5f074d45.chunk.js","6d2ba7e918066c5053b584b5bc5993b5"],["/react-redux-cnode.github.io/static/js/main.295b976c.js","a8dafc342fb56dbfd204ac0fcfd09e4f"],["/react-redux-cnode.github.io/static/media/flags.9c74e172.png","9c74e172f87984c48ddf5c8108cabe67"],["/react-redux-cnode.github.io/static/media/icons.674f50d2.eot","674f50d287a8c48dc19ba404d20fe713"],["/react-redux-cnode.github.io/static/media/icons.912ec66d.svg","912ec66d7572ff821749319396470bde"],["/react-redux-cnode.github.io/static/media/icons.af7ae505.woff2","af7ae505a9eed503f8b8e6982036873e"],["/react-redux-cnode.github.io/static/media/icons.b06871f2.ttf","b06871f281fee6b241d60582ae9369b9"],["/react-redux-cnode.github.io/static/media/icons.fee66e71.woff","fee66e712a8a08eef5805a46892932ad"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var n=new URL(e);return"/"===n.pathname.slice(-1)&&(n.pathname+=t),n.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,n,r){var c=new URL(e);return r&&c.pathname.match(r)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(n)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var n=new URL(t).pathname;return e.some(function(e){return n.match(e)})},stripIgnoredUrlParameters=function(e,t){var n=new URL(e);return n.hash="",n.search=n.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),n.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],n=e[1],r=new URL(t,self.location),c=createCacheKey(r,hashParamName,n,/\.\w{8}\./);return[r.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(n){if(!t.has(n)){var r=new Request(n,{credentials:"same-origin"});return fetch(r).then(function(t){if(!t.ok)throw new Error("Request for "+n+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(n,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(n){return Promise.all(n.map(function(n){if(!t.has(n.url))return e.delete(n)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,n=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),r="index.html";(t=urlsToCacheKeys.has(n))||(n=addDirectoryIndex(n,r),t=urlsToCacheKeys.has(n));var c="/react-redux-cnode.github.io/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(n=new URL(c,self.location).toString(),t=urlsToCacheKeys.has(n)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(n)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});