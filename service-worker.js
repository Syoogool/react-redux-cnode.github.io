"use strict";var precacheConfig=[["/react-redux-cnode.github.io/index.html","c136cfbdee93aefe6945bb7187922003"],["/react-redux-cnode.github.io/static/css/main.111a10f4.css","092f017e945a527916e11dd9f6d3beb9"],["/react-redux-cnode.github.io/static/js/0.8978fb1d.chunk.js","7bcea176db5f54030e5121706c57997f"],["/react-redux-cnode.github.io/static/js/1.ce236703.chunk.js","f90e4a0854d6831a8415f79ed4c7bc49"],["/react-redux-cnode.github.io/static/js/2.9464c848.chunk.js","8d007cb14e5f86b15de398d3a436e2e8"],["/react-redux-cnode.github.io/static/js/3.9f41c17b.chunk.js","277b9e8d6f86af0d4ef0155c099bc33e"],["/react-redux-cnode.github.io/static/js/4.156dc5e2.chunk.js","074b623c455d3d9077ee534740eb8283"],["/react-redux-cnode.github.io/static/js/5.0bb47aaa.chunk.js","2efe51c049dabab24c784b96fdfb1225"],["/react-redux-cnode.github.io/static/js/6.93616e7f.chunk.js","1b286521830842aeefc159dea72081c4"],["/react-redux-cnode.github.io/static/js/7.448d5f04.chunk.js","4a83faea46bdc6e94ebe0c585c6f9ecc"],["/react-redux-cnode.github.io/static/js/main.fc2751c0.js","f714616a0ca6499730aa83bc48c879fa"],["/react-redux-cnode.github.io/static/media/flags.9c74e172.png","9c74e172f87984c48ddf5c8108cabe67"],["/react-redux-cnode.github.io/static/media/icons.263bfe56.eot","263bfe56755cefdc9e6c3d8070e0868d"],["/react-redux-cnode.github.io/static/media/icons.27c88389.woff2","27c88389f00e0d8bfeebebae81f240b6"],["/react-redux-cnode.github.io/static/media/icons.7bc63d50.woff","7bc63d50d4158c6bfd4b30a99c9f9460"],["/react-redux-cnode.github.io/static/media/icons.b42b4467.svg","b42b446772f84a277ee29a0615b38800"],["/react-redux-cnode.github.io/static/media/icons.d3490a32.ttf","d3490a32350db6c9c41e69cc9ce99cd0"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var c=new URL(e);return"/"===c.pathname.slice(-1)&&(c.pathname+=t),c.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,c,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(c)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var c=new URL(t).pathname;return e.some(function(e){return c.match(e)})},stripIgnoredUrlParameters=function(e,t){var c=new URL(e);return c.hash="",c.search=c.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),c.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],c=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,c,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(c){if(!t.has(c)){var n=new Request(c,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+c+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(c,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(c){return Promise.all(c.map(function(c){if(!t.has(c.url))return e.delete(c)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,c=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(t=urlsToCacheKeys.has(c))||(c=addDirectoryIndex(c,n),t=urlsToCacheKeys.has(c));var r="/react-redux-cnode.github.io/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(c=new URL(r,self.location).toString(),t=urlsToCacheKeys.has(c)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(c)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});