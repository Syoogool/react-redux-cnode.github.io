"use strict";var precacheConfig=[["/react-redux-cnode.github.io/index.html","a2b0dfd2b598659e9dfe2e89b02f843b"],["/react-redux-cnode.github.io/static/css/main.111a10f4.css","092f017e945a527916e11dd9f6d3beb9"],["/react-redux-cnode.github.io/static/js/0.ae0788c0.chunk.js","6074f4fb3cab1eccfec202b33bb50a9d"],["/react-redux-cnode.github.io/static/js/1.f3d05aa8.chunk.js","c259029b753ae8d7a36ade6d87cc1f12"],["/react-redux-cnode.github.io/static/js/2.a97ea873.chunk.js","50b08c6ccb9ebaf3a26781bbb50868aa"],["/react-redux-cnode.github.io/static/js/3.278033be.chunk.js","5003a37283b9a1c89c16569c20555614"],["/react-redux-cnode.github.io/static/js/4.d21d2f58.chunk.js","b8c5ea37be331493fccbd370fae2badb"],["/react-redux-cnode.github.io/static/js/5.ac5e3645.chunk.js","944e4110df76b0a88070b98ba24de10d"],["/react-redux-cnode.github.io/static/js/6.df51d777.chunk.js","72155fe47af0449cd63f8afce944140a"],["/react-redux-cnode.github.io/static/js/7.448d5f04.chunk.js","4a83faea46bdc6e94ebe0c585c6f9ecc"],["/react-redux-cnode.github.io/static/js/main.c6e9c211.js","7cf3cb45eb85b5d1d99ab173ee22ae98"],["/react-redux-cnode.github.io/static/media/flags.9c74e172.png","9c74e172f87984c48ddf5c8108cabe67"],["/react-redux-cnode.github.io/static/media/icons.263bfe56.eot","263bfe56755cefdc9e6c3d8070e0868d"],["/react-redux-cnode.github.io/static/media/icons.27c88389.woff2","27c88389f00e0d8bfeebebae81f240b6"],["/react-redux-cnode.github.io/static/media/icons.7bc63d50.woff","7bc63d50d4158c6bfd4b30a99c9f9460"],["/react-redux-cnode.github.io/static/media/icons.b42b4467.svg","b42b446772f84a277ee29a0615b38800"],["/react-redux-cnode.github.io/static/media/icons.d3490a32.ttf","d3490a32350db6c9c41e69cc9ce99cd0"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var c=new URL(e);return"/"===c.pathname.slice(-1)&&(c.pathname+=t),c.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,c,n){var a=new URL(e);return n&&a.pathname.match(n)||(a.search+=(a.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(c)),a.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var c=new URL(t).pathname;return e.some(function(e){return c.match(e)})},stripIgnoredUrlParameters=function(e,t){var c=new URL(e);return c.hash="",c.search=c.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),c.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],c=e[1],n=new URL(t,self.location),a=createCacheKey(n,hashParamName,c,/\.\w{8}\./);return[n.toString(),a]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(c){if(!t.has(c)){var n=new Request(c,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+c+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(c,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(c){return Promise.all(c.map(function(c){if(!t.has(c.url))return e.delete(c)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,c=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(t=urlsToCacheKeys.has(c))||(c=addDirectoryIndex(c,n),t=urlsToCacheKeys.has(c));var a="/react-redux-cnode.github.io/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(c=new URL(a,self.location).toString(),t=urlsToCacheKeys.has(c)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(c)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});